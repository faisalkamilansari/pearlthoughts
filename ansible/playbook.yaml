---
- name: Setup Yii2 Docker Swarm environment
  hosts: all
  become: yes
  vars:
    yii2_repo: "https://github.com/faisalkamilansari/pearlthoughts.git"
    app_dir: "/opt/yii2-app"
    nginx_conf_path: "/etc/nginx/sites-available/yii2-app"
    nginx_conf_link: "/etc/nginx/sites-enabled/yii2-app"
    yii2_service_name: "yii2-app"
    swarm_initialized: false  # will set to true after init

  tasks:

  - name: Install required packages for Docker
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    loop:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - git
      - nginx
      - php
      - php-cli
      - php-fpm
    tags: docker_dependencies

  - name: Create keyrings directory
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download Docker GPG key using curl
    become: true
    shell: |
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      chmod a+r /etc/apt/keyrings/docker.asc

  - name: Add Docker repository
    apt_repository:
      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present
      filename: docker

  - name: Install Docker Engine
    apt:
      name: docker-ce
      state: present
      update_cache: yes
    tags: docker

  - name: Install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64
      dest: /usr/local/bin/docker-compose
      mode: '0755'
    tags: docker

  - name: Ensure Docker service is started and enabled
    systemd:
      name: docker
      state: started
      enabled: yes
    tags: docker

  - name: Add current user to docker group
    user:
      name: "{{ ansible_user }}"
      groups: docker
      append: yes
    tags: docker

  - name: Initialize Docker Swarm (only on first host)
    command: docker swarm init
    register: swarm_init
    failed_when: false
    changed_when: "'This node is already part of a swarm' not in swarm_init.stderr"
    when: inventory_hostname == groups['all'][0]
    tags: swarm

  - name: Clone Yii2 repo
    git:
      repo: "{{ yii2_repo }}"
      dest: "{{ app_dir }}"
      update: yes
    tags: app

  - name: Create NGINX config for Yii2 app
    copy:
      dest: "{{ nginx_conf_path }}"
      content: |
        server {
          listen 80;
          server_name _;
          location / {
            proxy_pass http://localhost:8080;  # assuming your app runs on 8080
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
          }
        }
    tags: nginx

  - name: Enable NGINX site
    file:
      src: "{{ nginx_conf_path }}"
      dest: "{{ nginx_conf_link }}"
      state: link
    tags: nginx

  - name: Remove default NGINX site
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    tags: nginx

  - name: Restart NGINX
    systemd:
      name: nginx
      state: restarted
    tags: nginx
  - name: Initialize Docker Swarm (if not already initialized)
    shell: |
      (docker info | grep -q 'Swarm: active' ) || docker swarm init --advertise-addr 192.168.100.202
    #args:
    #  warn: false
    become: true
    #tags: swarm
  - name: Deploy Yii2 stack from docker-compose.yaml
    command: docker stack deploy -c docker-compose.yaml yii2
    args:
      chdir: /opt/yii2-app
    become: true
    tags: deploy



